mutate(total_site = sum(total_Genus),
prop_Genus = total_Genus / total_site) %>%
ungroup() %>%
group_by(Genus) %>%
mutate(mean_prop = mean(prop_Genus, na.rm = TRUE)) %>%
filter(mean_prop >= 0.01) %>%
select(-mean_prop, -prop_Genus) %>%
spread(key = Genus, value = total_Genus)
# Square-root transform
inver_comm <- sqrt(invertebrates_well_preserved_wide[, 3:14])
# Vizualize optimum cluster number for invert community
invert_cluster_wss <- fviz_nbclust(x = as.matrix(vegdist(x = inver_comm, method = "bray",
diag = TRUE, upper = TRUE)),
FUNcluster = cluster::pam, method = "wss")
invert_cluster_wss
invert_cluster_sil <- fviz_nbclust(x = as.matrix(vegdist(x = inver_comm, method = "bray",
diag = TRUE, upper = TRUE)),
FUNcluster = cluster::pam, method = "silhouette", print.summary = FALSE)
invert_cluster_sil
invert_hclust <- pvclust(as.matrix(vegdist(x = inver_comm, method = "bray",
diag = TRUE, upper = TRUE)), method.hclust = "median",
method.dist = "correlation")
plot(invert_hclust)
pvrect(invert_hclust, alpha = 0.90)
# Export plots
ggsave(filename = "../figures/invertebrate_pam_analysis_wss.png",
plot = invert_cluster_wss, device = "png",
width = 18, height = 12, dpi = 300)
ggsave(filename = "../figures/invertebrate_pam_analysis_sil.png",
plot = invert_cluster_sil, device = "png",
width = 18, height = 12, dpi = 300)
plot(invert_hclust) %>%
pvrect(invert_hclust, alpha = 0.90)
plot(invert_hclust) %>%
pvrect2(invert_hclust, alpha = 0.90)
library(dendextend)
plot(invert_hclust) %>%
pvrect2(invert_hclust, alpha = 0.90)
plot(as.dendrogram(invert_hclust)) %>%
pvrect2(invert_hclust, alpha = 0.90)
ggsave(filename = "../figures/invertebrate_hclust_analysis.png",
plot = plot(invert_hclust), device = "png",
width = 18, height = 12, dpi = 300)
# Run invert NMDS
invertebrates_metaMDS <- metaMDS(comm = inver_comm, distance = "bray", try = 100)
invertebrates_metaMDS
# Pull scores from NMDS and add site data
data_scores <- as.data.frame(scores(x = invertebrates_metaMDS, display = "sites"))
data_scores$site <- invertebrates_well_preserved_wide$site
# Join scores with PPCP data and code into IDW_pop_group
data_scores <- full_join(x = data_scores, y = ppcp_meta_dist, by = "site") %>%
mutate(IDW_pop_group = ifelse(test = site %in% c(low, mod),
yes = "Low/Mod", no = NA),
IDW_pop_group = ifelse(test = site %in% high,
yes = "High", no = IDW_pop_group),
IDW_pop_group = factor(x = IDW_pop_group,
levels = c("High", "Low/Mod")))
species_scores <- as.data.frame(scores(x = invertebrates_metaMDS, display = "species"))
species_scores$species <- rownames(species_scores)
# Plot NMDS
inverts_well_preserved_nmds <- ggplot() +
geom_point(data = data_scores,
aes(x = NMDS1, y = NMDS2, size = log10(distance_weighted_population),
color = IDW_pop_group)) +
scale_size_continuous(range = c(12, 28), guide = FALSE) +
scale_color_manual(values = inferno(15)[c(3, 8, 11, 14)],
name = "IDW Population Grouping") +
guides(colour = guide_legend(override.aes = list(size = 10))) +
geom_text_repel(data = species_scores %>%
filter(species %in% c("Eulimnogammarus", "Poekilogammarus", "Valvatidae",
"Caddisflies", "Brandtia", "Planorbidae", "Baicaliidae",
"Cryptoropus", "Flatworms")) %>%
mutate(NMDS1 = ifelse(test = species == "Poekilogammarus",
yes = NMDS1+0.04, no = NMDS1),
NMDS2 = ifelse(test = species == "Poekilogammarus",
yes = NMDS2+0.02, no = NMDS2),
NMDS1 = ifelse(test = species == "Eulimnogammarus",
yes = NMDS1-0.08, no = NMDS1),
NMDS1 = ifelse(test = species == "Eulimnogammarus",
yes = NMDS1-0.04, no = NMDS1),
NMDS2 = ifelse(test = species == "Flatworms",
yes = NMDS2-0.07, no = NMDS2),),
aes(x = NMDS1, y = NMDS2, label = species),
size = 10) +
coord_equal() +
annotate("label", x = -0.15, y = 0.4, size = 10,
label = paste("Stress: ",
round(invertebrates_metaMDS$stress, digits = 3))) +
theme(legend.position = "right",
legend.key=element_blank(),
strip.text.x = element_text(size = 20, color = "grey80"),
text = element_text(size = 24),
axis.title.y = element_text(margin = margin(0, 20, 0, 0)),
axis.title.x = element_text(margin = margin(20, 0, 0, 0)),
panel.background = element_rect("white"),
panel.grid.major = element_line(colour = "grey80"),
panel.grid.minor = element_line(colour = "grey80"),
axis.ticks = element_line(color = "grey80"))
inverts_well_preserved_nmds
# Export plot. This plot is Figure 4 in the associated manuscript.
ggsave(filename = "../figures/inverts_well_preserved_nmds.png",
plot = inverts_well_preserved_nmds, device = "png",
height = 10, width = 20, dpi = 300)
# Re-join the metadata and distance data back in with invert data
inverts_well_preserved_meta_dist_wide <- full_join(x = invertebrates_well_preserved_wide,
y = ppcp_meta_dist,
by = "site") %>%
mutate(IDW_pop_group = ifelse(test = site %in% c(low, mod),
yes = "Low/Mod", no = NA),
IDW_pop_group = ifelse(test = site %in% high,
yes = "High", no = IDW_pop_group),
distance_weighted_population = log10(distance_weighted_population)) %>%
data.frame()
# Run PERMANOVA
adonis2(formula = sqrt(inverts_well_preserved_meta_dist_wide[, 3:14]) ~
inverts_well_preserved_meta_dist_wide[, 28],
data = inverts_well_preserved_meta_dist_wide,
method = "bray")
adonis2(formula = sqrt(inverts_well_preserved_meta_dist_wide[, 3:14]) ~
inverts_well_preserved_meta_dist_wide[, 29],
data = inverts_well_preserved_meta_dist_wide,
method = "bray")
# Run SIMPER
simper_results <- simper(comm = sqrt(inverts_well_preserved_meta_dist_wide[, 3:14]),
group = inverts_well_preserved_meta_dist_wide[, 29],
permutations = 999)
summary(simper_results)
plot(peri_hclust)
pvrect(peri_hclust, alpha = 0.9)
par(mfrow = c(1,2))
plot(peri_hclust)
pvrect(peri_hclust, alpha = 0.9)
plot(invert_hclust)
pvrect(invert_hclust, alpha = 0.9)
png(filename="./figures/hclust_combined_plot.png", height = 1800, width = 1200, units = "px")
png(filename="../figures/hclust_combined_plot.png", height = 1800, width = 1200, units = "px")
par(mfrow = c(1,2))
plot(peri_hclust)
pvrect(peri_hclust, alpha = 0.9)
plot(invert_hclust)
pvrect(invert_hclust, alpha = 0.9, )
dev.off()
png(filename="../figures/hclust_combined_plot.png", height = 1800, width = 1200, units = "px", res = 120)
par(mfrow = c(1,2))
plot(peri_hclust)
pvrect(peri_hclust, alpha = 0.9)
plot(invert_hclust)
pvrect(invert_hclust, alpha = 0.9, )
dev.off()
png(filename="../figures/hclust_combined_plot.png")
par(mfrow = c(1,2))
plot(peri_hclust)
pvrect(peri_hclust, alpha = 0.9)
plot(invert_hclust)
pvrect(invert_hclust, alpha = 0.9, )
dev.off()
png(filename="../figures/hclust_combined_plot.png", width = 10, height = 8, units = "in")
png(filename="../figures/hclust_combined_plot.png", width = 10, height = 8, units = "in", res = 120)
par(mfrow = c(1,2))
plot(peri_hclust)
pvrect(peri_hclust, alpha = 0.9)
plot(invert_hclust)
pvrect(invert_hclust, alpha = 0.9, )
dev.off()
png(filename="../figures/hclust_combined_plot.png", width = 10, height = 8, units = "in", res = 120)
par(mfrow = c(1,2))
plot(peri_hclust, main = "Periphyton Cluster Dendrogram")
pvrect(peri_hclust, alpha = 0.9)
plot(invert_hclust, main = "Macroinvertebrate Cluster Dendrogram")
pvrect(invert_hclust, alpha = 0.9, )
dev.off()
par(mfrow = c(1,2))
plot(peri_hclust, main = "Periphyton Cluster Dendrogram")
pvrect(peri_hclust, alpha = 0.9)
add_label(0.02, 0.07, "A")
plot(invert_hclust, main = "Macroinvertebrate Cluster Dendrogram")
add_label <- function(xfrac, yfrac, label, pos = 4, ...) {
u <- par("usr")
x <- u[1] + xfrac * (u[2] - u[1])
y <- u[4] - yfrac * (u[4] - u[3])
text(x, y, label, pos = pos, ...)
}
par(mfrow = c(1,2))
plot(peri_hclust, main = "Periphyton Cluster Dendrogram")
pvrect(peri_hclust, alpha = 0.9)
add_label(0.02, 0.07, "A")
plot(invert_hclust, main = "Macroinvertebrate Cluster Dendrogram")
pvrect(invert_hclust, alpha = 0.9, )
add_label(0.02, 0.07, "B")
plot(peri_hclust, main = NA)
pvrect(peri_hclust, alpha = 0.9)
add_label(0.02, 0.07, "A")
png(filename="../figures/hclust_combined_plot.png", width = 10, height = 8, units = "in", res = 120)
par(mfrow = c(1,2))
plot(peri_hclust, main = "Periphyton Cluster Dendrogram")
pvrect(peri_hclust, alpha = 0.9)
add_label(0.02, 0.07, "A")
plot(invert_hclust, main = "Macroinvertebrate Cluster Dendrogram")
pvrect(invert_hclust, alpha = 0.9, )
add_label(0.02, 0.07, "B")
dev.off()
plot(peri_hclust, main = "Periphyton Cluster Dendrogram", col.pv = virdis(3))
library(viridis)
plot(peri_hclust, main = "Periphyton Cluster Dendrogram", col.pv = virdis(3))
plot(peri_hclust, main = "Periphyton Cluster Dendrogram", col.pv = viridis(3))
plot(peri_hclust, main = "Periphyton Cluster Dendrogram", col.pv = viridis(2))
plot(peri_hclust, main = "Periphyton Cluster Dendrogram", col = viridis(2))
plot(peri_hclust, main = "Periphyton Cluster Dendrogram", col.pv = c(4,1,9))
plot(peri_hclust, main = "Periphyton Cluster Dendrogram", col.pv = c("purple", "yellow"))
list("purple", "yellow")
plot(peri_hclust, main = "Periphyton Cluster Dendrogram", col.pv = list("purple", "yellow"))
# Run PERMANOVA
adonis2(formula = periphyton_meta_dist_wide[, 2:7]
~ log10(periphyton_meta_dist_wide[, 21]),
data = periphyton_meta_dist_wide,
method = "bray", permutations = 999)
adonis2(formula = periphyton_meta_dist_wide[, 2:7]
~ periphyton_meta_dist_wide[, 22],
data = periphyton_meta_dist_wide,
method = "bray", permutations = 999)
# Convert invertebrate data to long format and add total count
invertebrate_meta_dist <- full_join(x = invertebrates, y = ppcp_meta_dist,
by = "site")
# Define amphipod genera
amphipods <- c("Eulimnogammarus", "Poekilogammarus", "Pallasea",
"Cryptoropus", "Brandtia")
# Define mollusc genera
molluscs <- c("Acroloxidae", "Baicaliidae",  "Benedictidae", "Planorbidae",
"Valvatidae")
# Make invertebrate data long format, sum counts, and group genera
invertebrates_long <- invertebrate_meta_dist %>%
select(site:Valvatidae) %>%
gather(key = taxon, value = count, Acroloxidae:Valvatidae) %>%
filter(!grepl("juvenile", taxon, ignore.case = TRUE)) %>%
separate(col = taxon, into = c("Genus", "Species", "Subspecies"), sep = "_") %>%
group_by(site, Genus) %>%
summarize(total_Genus = sum(count)) %>%
ungroup() %>%
group_by(site) %>%
mutate(total_site = sum(total_Genus)) %>%
unique() %>%
mutate(grouping = ifelse(test = Genus %in% amphipods,
yes = "Amphipod", no = NA),
grouping = ifelse(test = Genus %in% molluscs,
yes = "Mollusc", no = grouping),
grouping = ifelse(test = Genus == "Asellidae",
yes = "Isopod", no = grouping),
grouping = ifelse(test = Genus == "Caddisflies",
yes = "Caddisflies", no = grouping),
grouping = ifelse(test = Genus == "flatworms",
yes = "Planaria", no = grouping),
grouping = ifelse(test = Genus == "Leeches",
yes = "Hirudinea", no = grouping)) %>%
filter(!is.na(grouping))
# Rework Site column as a factor
invertebrates_long$site <- factor(x = invertebrates_long$site,
levels = c("BGO-2",  "BGO-3", "KD-1",
"KD-2", "BGO-1", "MS-1",
"BK-3", "BK-2", "SM-1",
"BK-1", "EM-1", "LI-1",
"LI-2", "LI-3"))
# Plot invert counts by site and genus
ggplot(invertebrates_long) +
geom_bar(aes(x = site, y = total_site), alpha = 0.5, stat = "identity") +
geom_bar(aes(x = site, y = total_Genus, fill = Genus), stat = "identity") +
facet_wrap(~ Genus) +
xlab("Site (Arranged by increasing inverse distance-weighted population)") +
ylab("Number of Individuals") +
theme_classic() +
theme(legend.position = "bottom",
plot.title = element_text(size = 20),
strip.text.x = element_text(size = 20),
strip.background = element_rect(fill = "white"),
panel.background = element_rect(color = "black"),
axis.title = element_text(size = 20),
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(margin = margin(0, 20, 0, 0)),
axis.title.x = element_text(margin = margin(20, 0, 0, 0)),
legend.text = element_text(size = 16))
# Create a cleaned up wide format invertebrate genus dataset
invertebrates_condensed_wide <- invertebrate_meta_dist %>%
select(site:Valvatidae) %>%
gather(key = taxon, value = count, Acroloxidae:Valvatidae) %>%
filter(!grepl("juvenile", taxon, ignore.case = TRUE)) %>%
separate(col = taxon, into = c("Genus", "Species", "Subspecies")) %>%
group_by(site, Genus) %>%
summarize(total_Genus = sum(count)) %>%
ungroup() %>%
group_by(site) %>%
mutate(total_site = sum(total_Genus)) %>%
unique() %>%
spread(key = Genus, value = total_Genus)
# Check how data are formatted
head(invertebrates_condensed_wide)
# Check for correlations
pairs(invertebrates_condensed_wide[, 3:17], upper.panel = panel.cor)
# Remove poorly preserved genera from dataset
invertebrates_well_preserved_long <- invertebrate_meta_dist %>%
select(site:Valvatidae) %>%
gather(key = taxon, value = count, Acroloxidae:Valvatidae) %>%
filter(!grepl("juvenile", taxon, ignore.case = TRUE)) %>%
separate(col = taxon, into = c("Genus", "Species", "Subspecies")) %>%
group_by(site, Genus) %>%
summarize(total_Genus = sum(count)) %>%
ungroup() %>%
group_by(site) %>%
mutate(total_site = sum(total_Genus)) %>%
unique() %>%
ungroup()
# Rework Genus and Site columns as factors
invertebrates_well_preserved_long_ordered <- invertebrates_well_preserved_long %>%
mutate(Genus = factor(x = Genus,
levels = c("Brandtia", "Cryptoropus", "Eulimnogammarus",
"Pallasea", "Poekilogammarus",
"Acroloxidae", "Baicaliidae", "Benedictidae",
"Maackia", "Planorbidae", "Valvatidae",
"Asellidae", "Caddisflies", "Flatworms",
"Leeches")),
site = factor(x = site,
levels = c("BGO-2",  "BGO-3", "KD-1",
"KD-2", "BGO-1", "MS-1",
"BK-3", "BK-2", "SM-1",
"BK-1", "EM-1", "LI-1",
"LI-2", "LI-3")))
# Prep invert data for plotting and then do so
invertebrate_well_preserved_plot <- invertebrates_well_preserved_long_ordered %>%
mutate(Group = ifelse(test = Genus %in% amphipods,
yes = "Amphipod", no = Genus),
Group = ifelse(test = Genus %in% molluscs,
yes = "Mollusc", no = Group),
Genus = factor(x = Genus,
levels = c("Brandtia", "Cryptoropus", "Eulimnogammarus",
"Pallasea", "Poekilogammarus",
"Acroloxidae", "Baicaliidae", "Benedictidae",
"Maackia", "Planorbidae", "Valvatidae",
"Asellidae", "Caddisflies", "Flatworms",
"Leeches"))) %>%
ggplot() +
geom_bar(aes(x = site, y = total_site), alpha = 0.5, stat = "identity") +
geom_bar(aes(x = site, y = total_Genus, fill = as.factor(Group)),
stat = "identity") +
scale_fill_viridis_d(option = "inferno") +
facet_wrap(~ Genus) +
xlab("Site (Arranged by increasing population intensity)") +
ylab("Number of Individuals") +
theme_classic() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 20),
strip.text.x = element_text(size = 20),
strip.background = element_rect(fill = "white"),
panel.background = element_rect(color = "black"),
axis.title = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(margin = margin(0, 20, 0, 0)),
axis.title.x = element_text(margin = margin(20, 0, 0, 0)),
legend.text = element_text(size = 16))
# Create a cleaned up wide format invertebrate genus dataset with well preserved
# genera. In this step we also remove rare species (i.e., taxa representing less
# than 1% of the intercommunity abundance).
invertebrates_well_preserved_wide <- invertebrate_meta_dist %>%
select(site:Valvatidae) %>%
gather(key = taxon, value = count, Acroloxidae:Valvatidae) %>%
filter(!grepl("juvenile", taxon)) %>%
separate(col = taxon, into = c("Genus", "Species", "Subspecies")) %>%
group_by(site, Genus) %>%
summarize(total_Genus = sum(count)) %>%
ungroup() %>%
group_by(site) %>%
mutate(total_site = sum(total_Genus),
prop_Genus = total_Genus / total_site) %>%
ungroup() %>%
group_by(Genus) %>%
mutate(mean_prop = mean(prop_Genus, na.rm = TRUE)) %>%
filter(mean_prop >= 0.01) %>%
select(-mean_prop, -prop_Genus) %>%
spread(key = Genus, value = total_Genus)
# Square-root transform
inver_comm <- sqrt(invertebrates_well_preserved_wide[, 3:14])
# Vizualize optimum cluster number for invert community
invert_cluster_wss <- fviz_nbclust(x = as.matrix(vegdist(x = inver_comm, method = "bray",
diag = TRUE, upper = TRUE)),
FUNcluster = cluster::pam, method = "wss")
invert_cluster_wss
invert_cluster_sil <- fviz_nbclust(x = as.matrix(vegdist(x = inver_comm, method = "bray",
diag = TRUE, upper = TRUE)),
FUNcluster = cluster::pam, method = "silhouette", print.summary = FALSE)
invert_cluster_sil
invert_hclust <- pvclust(as.matrix(vegdist(x = inver_comm, method = "bray",
diag = TRUE, upper = TRUE)), method.hclust = "median",
method.dist = "correlation")
# Run invert NMDS
invertebrates_metaMDS <- metaMDS(comm = inver_comm, distance = "bray", try = 100)
invertebrates_metaMDS
# Pull scores from NMDS and add site data
data_scores <- as.data.frame(scores(x = invertebrates_metaMDS, display = "sites"))
data_scores$site <- invertebrates_well_preserved_wide$site
# Join scores with PPCP data and code into IDW_pop_group
data_scores <- full_join(x = data_scores, y = ppcp_meta_dist, by = "site") %>%
mutate(IDW_pop_group = ifelse(test = site %in% c(low, mod),
yes = "Low/Mod", no = NA),
IDW_pop_group = ifelse(test = site %in% high,
yes = "High", no = IDW_pop_group),
IDW_pop_group = factor(x = IDW_pop_group,
levels = c("High", "Low/Mod")))
species_scores <- as.data.frame(scores(x = invertebrates_metaMDS, display = "species"))
species_scores$species <- rownames(species_scores)
# Plot NMDS
inverts_well_preserved_nmds <- ggplot() +
geom_point(data = data_scores,
aes(x = NMDS1, y = NMDS2, size = log10(distance_weighted_population),
color = IDW_pop_group)) +
scale_size_continuous(range = c(12, 28), guide = FALSE) +
scale_color_manual(values = inferno(15)[c(3, 8, 11, 14)],
name = "IDW Population Grouping") +
guides(colour = guide_legend(override.aes = list(size = 10))) +
geom_text_repel(data = species_scores %>%
filter(species %in% c("Eulimnogammarus", "Poekilogammarus", "Valvatidae",
"Caddisflies", "Brandtia", "Planorbidae", "Baicaliidae",
"Cryptoropus", "Flatworms")) %>%
mutate(NMDS1 = ifelse(test = species == "Poekilogammarus",
yes = NMDS1+0.04, no = NMDS1),
NMDS2 = ifelse(test = species == "Poekilogammarus",
yes = NMDS2+0.02, no = NMDS2),
NMDS1 = ifelse(test = species == "Eulimnogammarus",
yes = NMDS1-0.08, no = NMDS1),
NMDS1 = ifelse(test = species == "Eulimnogammarus",
yes = NMDS1-0.04, no = NMDS1),
NMDS2 = ifelse(test = species == "Flatworms",
yes = NMDS2-0.07, no = NMDS2),),
aes(x = NMDS1, y = NMDS2, label = species),
size = 10) +
coord_equal() +
annotate("label", x = -0.15, y = 0.4, size = 10,
label = paste("Stress: ",
round(invertebrates_metaMDS$stress, digits = 3))) +
theme(legend.position = "right",
legend.key=element_blank(),
strip.text.x = element_text(size = 20, color = "grey80"),
text = element_text(size = 24),
axis.title.y = element_text(margin = margin(0, 20, 0, 0)),
axis.title.x = element_text(margin = margin(20, 0, 0, 0)),
panel.background = element_rect("white"),
panel.grid.major = element_line(colour = "grey80"),
panel.grid.minor = element_line(colour = "grey80"),
axis.ticks = element_line(color = "grey80"))
inverts_well_preserved_nmds
# Re-join the metadata and distance data back in with invert data
inverts_well_preserved_meta_dist_wide <- full_join(x = invertebrates_well_preserved_wide,
y = ppcp_meta_dist,
by = "site") %>%
mutate(IDW_pop_group = ifelse(test = site %in% c(low, mod),
yes = "Low/Mod", no = NA),
IDW_pop_group = ifelse(test = site %in% high,
yes = "High", no = IDW_pop_group),
distance_weighted_population = log10(distance_weighted_population)) %>%
data.frame()
# Run PERMANOVA
adonis2(formula = sqrt(inverts_well_preserved_meta_dist_wide[, 3:14]) ~
inverts_well_preserved_meta_dist_wide[, 28],
data = inverts_well_preserved_meta_dist_wide,
method = "bray")
adonis2(formula = sqrt(inverts_well_preserved_meta_dist_wide[, 3:14]) ~
inverts_well_preserved_meta_dist_wide[, 29],
data = inverts_well_preserved_meta_dist_wide,
method = "bray")
# Run PERMANOVA
adonis2(formula = sqrt(inverts_well_preserved_meta_dist_wide[, 3:14]) ~
inverts_well_preserved_meta_dist_wide[, 28],
data = inverts_well_preserved_meta_dist_wide,
method = "bray")
# Run SIMPER
simper_results <- simper(comm = sqrt(inverts_well_preserved_meta_dist_wide[, 3:14]),
group = inverts_well_preserved_meta_dist_wide[, 29],
permutations = 999)
summary(simper_results)
# Export plot. This plot is Figure 4 in the associated manuscript.
ggsave(filename = "../figures/inverts_well_preserved_nmds.png",
plot = inverts_well_preserved_nmds, device = "png",
height = 10, width = 20, dpi = 300)
ggarrange(periphyton_IDW_pop_group_plot, inverts_well_preserved_nmds,
ncol = 2, nrow = 1, labels = "AUTO") %>%
ggexport(filename = "../figures/nmds_combined_plot.png",
hieght = 6000, width = 3000, res = 120)
ggarrange(periphyton_IDW_pop_group_plot, inverts_well_preserved_nmds,
ncol = 1, nrow = 2, labels = "AUTO", font.label = list(size = 36, face = "bold")) %>%
ggexport(filename = "../figures/nmds_combined_plot.png", height = 3000, width = 3000, res = 120)
ggarrange(periphyton_IDW_pop_group_plot, inverts_well_preserved_nmds,
ncol = 1, nrow = 2, labels = "AUTO",
font.label = list(size = 36, face = "bold", common.legend = TRUE)) %>%
ggexport(filename = "../figures/nmds_combined_plot.png", height = 3000, width = 3000, res = 120)
ggarrange(periphyton_IDW_pop_group_plot, inverts_well_preserved_nmds,
ncol = 1, nrow = 2, labels = "AUTO",
font.label = list(size = 36, face = "bold"), common.legend = TRUE) %>%
ggexport(filename = "../figures/nmds_combined_plot.png", height = 3000, width = 3000, res = 120)
return(legend)}
get_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
common_legend <- get_legend(inverts_well_preserved_nmds)
ggarrange(periphyton_IDW_pop_group_plot, inverts_well_preserved_nmds,
ncol = 1, nrow = 2, labels = "AUTO",
font.label = list(size = 36, face = "bold"), p2_legend) %>%
ggexport(filename = "../figures/nmds_combined_plot.png", height = 3000, width = 3000, res = 120)
ggarrange(periphyton_IDW_pop_group_plot, inverts_well_preserved_nmds,
ncol = 1, nrow = 2, labels = "AUTO",
font.label = list(size = 36, face = "bold")) %>%
ggexport(filename = "../figures/nmds_combined_plot.png", height = 3000, width = 3000, res = 120)
