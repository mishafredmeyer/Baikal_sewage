library(OpenStreetMap)
library(tidyverse)
library(OpenStreetMap)
library(OpenStreetMap)
install.packages("rJava")
library(OpenStreetMap)
Sys.getenv("JAVA_HOME")
Sys.setenv('C:\Program Files\Java\jre1.8.0_241')
Sys.setenv('C:/Program Files/Java/jre1.8.0_241')
Sys.setenv(JAVA_HOME='C:/Program Files/Java/jre1.8.0_241')
Sys.getenv("JAVA_HOME")
library(OpenStreetMap)
install.packages("rJava")
library(rJava)
library(tidyverse)
library(OpenStreetMap)
Sys.getenv()
Sys.setenv("JAVA_HOME" = "C:/Program Files/java")
library(OpenStreetMap)
setwd("C:/Users/michael.f.meyer/Dropbox/Baikal_sewage/cleaned_data")
library(tidyverse)
library(OpenStreetMap)
library(ggpubr)
library(cowplot)
library(ggrepel)
sample_points <- read.csv(file = "metadata_20190320.csv",
stringsAsFactors = F)
# Make the locs Mercator
sample_points_merc <- projectMercator(lat = sample_points$lat,
long = sample_points$long) %>%
as.data.frame() %>%
bind_cols(., sample_points)
# Get a basemap
# Options: https://www.r-bloggers.com/the-openstreetmap-package-opens-up/
base_map <- openmap(upperLeft = c(55.915113,102.2324553),
lowerRight = c(51.1800703,110.8),
type = 'stamen-toner') %>%
openproj()
base_map_zoom <- openmap(upperLeft = c(52.15, 104.75),
lowerRight = c(51.75, 105.55),
type = 'bing', zoom = 11) %>%
openproj()
inset_map <- autoplot(base_map) +
geom_point(data = sample_points_merc,
aes(x = long, y = lat),
alpha = 0.8,  color = "black", size = 3,
shape = 21, fill = "#56B4E9") +
theme(axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
plot.background = element_rect(fill = "snow1")) +
xlab("") +
ylab("") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank())
zoom_map <- autoplot(base_map_zoom) +
geom_point(data = sample_points_merc,
aes(x = long, y = lat),
alpha = 0.8,  color = "black", size = 10,
shape = 21, fill = "#56B4E9") +
geom_text_repel(data = filter(sample_points_merc,
Site != "LI-3"),
aes(x = long, y = lat, label = Site),
segment.size = 1,
segment.color = "white",
color = "white",
point.padding = 1.5,
max.iter = 5000) +
# Do LI-3 separately cuz there's point overlap
geom_text_repel(data = filter(sample_points_merc,
Site == "LI-3"),
aes(x = long, y = lat, label = Site),
nudge_x = 0.01,
nudge_y = 0.005,
segment.size = 1,
segment.color = "white",
color = "white",
point.padding = 1.5,
max.iter = 5000) +
theme(panel.background = element_blank())
# https://stackoverflow.com/questions/5219671/it-is-possible-to-create-inset-graphs
baikal_combine <- ggdraw() +
draw_plot(zoom_map) +
draw_plot(inset_map, x = -0.01, y = 0.7, width = .455, height = .26, scale = 1)
baikal_combine
